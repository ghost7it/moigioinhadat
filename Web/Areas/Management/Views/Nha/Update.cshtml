@*@using Entities.Models;*@
@model Entities.ViewModels.NhaUpdatingViewModel
@{
    ViewBag.Title = "Cập nhật nhà";
    Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";
}

<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="javascript:void(0);">Cập nhật nhà</a>
        </li>
    </ul>
</div>

@*Bắt đầu nội dung tùy chỉnh*@
<div class="row">
    <div class="col-md-12">
        <div class="tab-pane" id="tab_6">
            <div class="portlet box grey-cascade">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-edit"></i>Cập nhật nhà
                    </div>
                </div>
                <div class="portlet-body form">
                    @using (Html.BeginForm("Update", "Nha", FormMethod.Post, new { @class = "form-horizontal form-bordered form-row-stripped" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-body">
                            @if (!ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger">
                                    <button data-close="alert" class="close"></button>
                                    @Html.ValidationSummary(true)
                                </div>
                            }
                            <div class="col-md-6 create-form-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MatBangId, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9 checkboxmatbang" style="height:129px; overflow:scroll; overflow-x:hidden;padding-top:10px">
                                        @for (int idx = 0; idx < Model.ListMatBangArr.Count; idx++)
                                        {
                                            @Html.HiddenFor(x => Model.ListMatBangArr[idx].FieldKey)
                                            @Html.CheckBoxFor(x => Model.ListMatBangArr[idx].IsSelected)
                                            @Html.DisplayFor(x => Model.ListMatBangArr[idx].FieldName)
                                            @Html.HiddenFor(x => Model.ListMatBangArr[idx].FieldName)
                                            <br />
                                        }
                                        @Html.TextBoxFor(model => model.MatBangId, new { @Style = "visibility:hidden;height:1px", @class = "matbangidarr" })

                                    </div>
                                    <div class="col-md-9 col-md-offset-3"> @Html.ValidationMessageFor(model => model.MatBangId)</div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.QuanId, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(model => model.QuanId, (IEnumerable<SelectListItem>)ViewBag.QuanDropdownlist, "Chọn tỉnh/thành phố", new { @class = "form-control sel-quan" })
                                        @Html.ValidationMessageFor(model => model.QuanId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DuongId, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(model => model.DuongId, (IEnumerable<SelectListItem>)ViewBag.DuongDropdownlist, "Chọn đường", new { @class = "form-control sel-duong" })
                                        @Html.ValidationMessageFor(model => model.DuongId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SoNha, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.SoNha, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SoNha)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TenToaNha, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.TenToaNha, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TenToaNha)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MatTienTreoBien, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.MatTienTreoBien, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.MatTienTreoBien)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BeNgangLotLong, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.BeNgangLotLong, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BeNgangLotLong)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DienTichDat, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.DienTichDat, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DienTichDat)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DienTichDatSuDungTang1, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.DienTichDatSuDungTang1, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DienTichDatSuDungTang1)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SoTang, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.SoTang, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SoTang)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TongDienTichSuDung, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.TongDienTichSuDung, new { @class = "form-control tong-dien-tich" })
                                        @Html.ValidationMessageFor(model => model.TongDienTichSuDung)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DiChungChu, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("DiChungChu", (IEnumerable<SelectListItem>)ViewBag.ListYesOrNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DiChungChu)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Ham, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("Ham", (IEnumerable<SelectListItem>)ViewBag.ListYesOrNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Ham)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ThangMay, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("ThangMay", (IEnumerable<SelectListItem>)ViewBag.ListYesOrNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ThangMay)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NoiThatKhachThueCuId, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("NoiThatKhachThueCuId", (IEnumerable<SelectListItem>)ViewBag.NoiThatKhachThueCu, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NoiThatKhachThueCuId)
                                    </div>
                                </div>
                                <div class="form-group danhgia_wr">
                                    @Html.LabelFor(model => model.DanhGiaPhuHopVoiId, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9 ">
                                        @*@Html.DropDownList("DanhGiaPhuHopVoiId", (IEnumerable<SelectListItem>)ViewBag.DanhGiaPhuHopVoi, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DanhGiaPhuHopVoiId)*@
                                        <input type="text" class="form-control danhgiainput" style="background:#fff url(/Images/AdminV1/carret.png) no-repeat 98.5% 13px !important;" readonly="readonly" />
                                        <div class="danhgia_content hidden">
                                            @for (int idx = 0; idx < Model.ListDanhGiaPhuHopVoiArr.Count; idx++)
                                            {
                                                @Html.HiddenFor(x => Model.ListDanhGiaPhuHopVoiArr[idx].FieldKey)
                                                @Html.CheckBoxFor(x => Model.ListDanhGiaPhuHopVoiArr[idx].IsSelected, new { @text = Model.ListDanhGiaPhuHopVoiArr[idx].FieldName })
                                                @Html.DisplayFor(x => Model.ListDanhGiaPhuHopVoiArr[idx].FieldName)
                                                @Html.HiddenFor(x => Model.ListDanhGiaPhuHopVoiArr[idx].FieldName)
                                                <br />
                                            }
                                            @Html.HiddenFor(model => model.DanhGiaPhuHopVoiId, new { @class = "danhgiaphuhopvoiidarr" })                                            
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TongGiaThue, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.TongGiaThue, new { @class = "form-control tong-gia-thue" })
                                        @Html.ValidationMessageFor(model => model.TongGiaThue)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GiaThueBQ, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.GiaThueBQ, new { @class = "form-control gia-thue-bq" })
                                        @Html.ValidationMessageFor(model => model.GiaThueBQ)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TenNguoiLienHeVaiTro, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.TenNguoiLienHeVaiTro, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TenNguoiLienHeVaiTro)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SoDienThoai, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.SoDienThoai, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SoDienThoai)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NgayCNHenLienHeLai, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <div class="input-group input-large date-picker input-daterange" style="width: 100% !important; padding-bottom: 20px;" data-date="@DateTime.Now.ToString("dd/MM/yyyy")" data-date-format="dd/mm/yyyy">
                                            @Html.TextBoxFor(model => model.NgayCNHenLienHeLai, new { @class = "form-control" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NgayCNHenLienHeLai)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CapDoTheoDoiId, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownList("CapDoTheoDoiId", (IEnumerable<SelectListItem>)ViewBag.CapDoTheoDoi, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CapDoTheoDoiId)
                                    </div>
                                </div>
                                <div class="form-group last">
                                    @Html.LabelFor(model => model.ImageDescription1, new { @class = "col-md-3 control-label" })
                                    @Html.HiddenFor(model => model.ImageDescription1)
                                    <div class="col-md-9">
                                        <div>
                                            <div class="col-md-6 thumbnail" style="height:150px;">
                                                <img id="Image_Preview1" src="@Html.DisplayTextFor(model => model.ImageDescription1)" alt="" style="height:100%;" />
                                            </div>
                                            <div class="col-md-6" style="line-height:150px;">
                                                <button type="button" class="btn btn-default select-image1"><i class="fa fa-sm"></i> Chọn ảnh</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group last">
                                    @Html.LabelFor(model => model.ImageDescription2, new { @class = "col-md-3 control-label" })
                                    @Html.HiddenFor(model => model.ImageDescription2)
                                    <div class="col-md-9">
                                        <div>
                                            <div class="col-md-6 thumbnail" style="height:150px;">
                                                <img id="Image_Preview2" src="@Html.DisplayTextFor(model => model.ImageDescription2)" alt="" style="height:100%;" />
                                            </div>
                                            <div class="col-md-6" style="line-height:150px;">
                                                <button type="button" class="btn btn-default select-image2"><i class="fa fa-sm"></i> Chọn ảnh</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group last">
                                    @Html.LabelFor(model => model.ImageDescription3, new { @class = "col-md-3 control-label" })
                                    @Html.HiddenFor(model => model.ImageDescription3)
                                    <div class="col-md-9">
                                        <div>
                                            <div class="col-md-6 thumbnail" style="height:150px;">
                                                <img id="Image_Preview3" src='@Html.DisplayTextFor(model => model.ImageDescription3)' alt="" style="height:100%;" />
                                            </div>
                                            <div class="col-md-6" style="line-height:150px;">
                                                <button type="button" class="btn btn-default select-image3"><i class="fa fa-sm"></i> Chọn ảnh</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group last">
                                    @Html.LabelFor(model => model.ImageDescription4, new { @class = "col-md-3 control-label" })
                                    @Html.HiddenFor(model => model.ImageDescription4)
                                    <div class="col-md-9">
                                        <div>
                                            <div class="col-md-6 thumbnail" style="height:150px;">
                                                <img id="Image_Preview4" src="@Html.DisplayTextFor(model => model.ImageDescription4)" alt="" style="height:100%;" />
                                            </div>
                                            <div class="col-md-6" style="line-height:150px;">
                                                <button type="button" class="btn btn-default select-image4"><i class="fa fa-sm"></i> Chọn ảnh</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GhiChu, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.GhiChu, new { @class = "form-control", @style = "height: 97px;" })
                                        @Html.ValidationMessageFor(model => model.GhiChu)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9" style="margin-top:10px">
                                    <button type="submit" class="btn green"><i class="fa fa-check"></i> Ghi nhận</button>
                                    <a href="@Url.RouteUrl("NhaIndex")" class="btn default">Hủy bỏ</a>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>

    </div>
</div>
@section Styles{
    @Styles.Render("~/Content/adminv1/datepicker")
}
@section Scripts {
    @Scripts.Render("~/bundles/adminv1/jqueryval", "~/bundles/adminv1/datepicker")
    <script type="text/javascript" src="~/Editor/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/Editor/ckfinder/ckfinder.js"></script>
    <script type="text/javascript">
        CKFinder.setupCKEditor(null, '/Editor/ckfinder');
        jQuery(document).ready(function () {
            $('#Title').focus();
            $(document).on('click', '.select-image1', function () {
                var finder = new CKFinder();
                finder.startupPath = 'Images:/bai-viet/';
                finder.selectActionFunction = function (fileUrl) {
                    $('#ImageDescription1').val(fileUrl);
                    $('#Image_Preview1').attr('src', fileUrl);
                };
                finder.popup();

            });

            $(".gia-thue-bq").prop("disabled", true);
            function addCommas(nStr) {
                nStr += '';
                var x = nStr.split('.');
                var x1 = x[0];
                var x2 = x.length > 1 ? '.' + x[1] : '';
                var rgx = /(\d+)(\d{3})/;
                while (rgx.test(x1)) {
                    x1 = x1.replace(rgx, '$1' + ',' + '$2');
                }
                return x1 + x2;
            }
            $(document).on('change', '.tong-dien-tich', function () {
                //Tonggiathue/tongS
                if ($('.tong-gia-thue').val() != 0 && $('.tong-dient-tich').val() != 0) {
                    var tongGiaThue = parseFloat($('.tong-gia-thue').val().replace(/,/g, '').replace(".00", ""));
                    var tongDienTich = parseFloat($('.tong-dien-tich').val().replace(/,/g, '').replace(".00", ""));
                    var bq = tongGiaThue / tongDienTich;
                    if ($.isNumeric(bq)) {
                        $('.gia-thue-bq').val(addCommas(parseFloat(bq).toFixed(2)));
                    }
                }
            });

            $(document).on('change', '.tong-gia-thue', function () {
                if ($('.tong-gia-thue').val() != 0 && $('.tong-dient-tich').val() != 0) {
                    var tongGiaThue = parseFloat($('.tong-gia-thue').val().replace(/,/g, '').replace(".00", ""));
                    var tongDienTich = parseFloat($('.tong-dien-tich').val().replace(/,/g, '').replace(".00", ""));
                    var bq = tongGiaThue / tongDienTich;
                    if ($.isNumeric(bq)) {
                        $('.gia-thue-bq').val(addCommas(parseFloat(bq).toFixed(2)));
                    }
                }
            });

            $(document).on('click', '.select-image2', function () {
                var finder = new CKFinder();
                finder.startupPath = 'Images:/bai-viet/';
                finder.selectActionFunction = function (fileUrl) {
                    $('#ImageDescription2').val(fileUrl);
                    $('#Image_Preview2').attr('src', fileUrl);
                };
                finder.popup();

            });

            $(document).on('click', '.select-image3', function () {
                var finder = new CKFinder();
                finder.startupPath = 'Images:/bai-viet/';
                finder.selectActionFunction = function (fileUrl) {
                    $('#ImageDescription3').val(fileUrl);
                    $('#Image_Preview3').attr('src', fileUrl);
                };
                finder.popup();

            });

            $(document).on('click', '.select-image4', function () {
                var finder = new CKFinder();
                finder.startupPath = 'Images:/bai-viet/';
                finder.selectActionFunction = function (fileUrl) {
                    $('#ImageDescription4').val(fileUrl);
                    $('#Image_Preview4').attr('src', fileUrl);
                };
                finder.popup();

            });

            $('.date-picker').datepicker({
                autoclose: true
            });

            $(document).on('change', '.sel-quan', function (e) {
                GetDuongByQuan($(this).val(), $(this));
            });
        });

        function GetDuongByQuan(id, quan) {
            var URL = ('@Url.RouteUrl("SharedGetDuongByQuan", new { quanId = "objectIdReplacement" })').replace('objectIdReplacement', id);
            $.getJSON(URL, function (data) {
                var items = "<option value=''>Chọn đường</option>";
                if (data) {
                    $.each(data, function (i, item) {
                        items += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                    });
                }
                var duong = $(quan).closest(".create-form-6").find(".sel-duong");
                $(duong).html(items);
            });
        };

        $(function () {
            function addCommas(nStr) {
                nStr += '';
                var x = nStr.split('.');
                var x1 = x[0];
                var x2 = x.length > 1 ? '.' + x[1] : '';
                var rgx = /(\d+)(\d{3})/;
                while (rgx.test(x1)) {
                    x1 = x1.replace(rgx, '$1' + ',' + '$2');
                }
                return x1 + x2;
            }
            $(".checkboxmatbang input:checkbox").click(function () {
                getMatBangId();
            });
            getMatBangId();
            function getMatBangId() {
                var valuecheckbox = "";
                $(".checkboxmatbang input:checkbox").each(function (index) {
                    if ($(this).prop("checked")) {
                        valuecheckbox += valuecheckbox != "" ? "," + $(this).prev().val() : $(this).prev().val();
                        //return false;
                    };
                });
                $("#MatBangId").val(valuecheckbox);
            }
            $("#MatTienTreoBien, #BeNgangLotLong, #DienTichDat, #DienTichDatSuDungTang1, #GiaThueBQ, #TongGiaThue, #TongDienTichSuDung").keyup(function () {
                var itemValue = $(this).val().replace(/,/g, '');
                if ($.isNumeric(itemValue)) {
                    itemValue = addCommas(itemValue);
                }
                $(this).val(itemValue);
            });
            $("#MatTienTreoBien, #BeNgangLotLong, #DienTichDat, #DienTichDatSuDungTang1, #GiaThueBQ, #TongGiaThue, #TongDienTichSuDung").each(function () {
                var itemValue = $(this).val().replace(/,/g, '').replace(".00", "");
                if ($.isNumeric(itemValue)) {
                    itemValue = addCommas(itemValue);
                }
                $(this).val(itemValue);
            });
            $("#MatTienTreoBien, #BeNgangLotLong, #DienTichDat, #DienTichDatSuDungTang1, #GiaThueBQ, #TongGiaThue, #TongDienTichSuDung").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if ($(this).val().indexOf(".") != -1 && e.which == 46) {
                    return false;
                }
                if (e.which == 46) {
                    return true;
                }
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    return false;
                }

            });
            $("#SoTang").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    return false;
                }

            });
            $(".danhgiainput").click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                $(".danhgia_content").toggleClass("hidden");
            });
            getDanhGiaText();
            function getDanhGiaText() {
                var str = "";
                var valuecheckbox = "";
                $(".danhgia_content input:checkbox").each(function () {
                    if ($(this).is(":checked")) {
                        str += $(this).attr("text") + "; ";
                        valuecheckbox += valuecheckbox != "" ? ";" + $(this).prev().val() : $(this).prev().val();
                    }
                });
                $(".danhgiainput").val(str);
                $("#DanhGiaPhuHopVoiId").val(valuecheckbox);
            }
            $(".danhgia_content input:checkbox").click(function (e) {
                e.stopPropagation();
                var valuecheckbox = "";
                var str = "";
                $(".danhgia_content input:checkbox").each(function () {
                    if ($(this).is(":checked")) {
                        str += $(this).attr("text") + "; ";
                        valuecheckbox += valuecheckbox != "" ? ";" + $(this).prev().val() : $(this).prev().val();
                    }
                });
                $(".danhgiainput").val(str);
                $("#DanhGiaPhuHopVoiId").val(valuecheckbox);
            });

            $("html").click(function () {
                if (!$(".danhgia_content").is(":hidden")) {
                    $(".danhgia_content").addClass("hidden");
                }
            });
        });
    </script>
}
<style>
    .danhgia_wr .col-md-9 {
        position: relative;
    }

    .danhgiainput:hover {
        cursor: default;
    }

    .danhgia_content {
        position: absolute;
        top: 48px;
        left: 15px;
        width: 92.5%;
        background: #fff;
        border: 1px solid #ddd;
        z-index: 2;
        padding: 5px;
    }
</style>
