@using Entities.Enums; @{     ViewBag.Title = "Danh sách công việc";     Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";     var canUpdate = RoleHelper.CheckPermission(ModuleEnum.DanhSachCongViec, ActionEnum.Update); } <div class="page-bar">     <ul class="page-breadcrumb">         <li>             <i class="fa fa-home"></i>             <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>             <i class="fa fa-angle-right"></i>         </li>         <li>             <a href="javascript:void(0);">Danh sách công việc</a>         </li>     </ul> </div>  <div class="row">     <div class="col-md-12">         <div class="portlet light">             <div class="portlet-title">                 <div class="caption">                     <i class="fa fa-check-square font-green-sharp bold"></i>                     <span class="caption-subject font-green-sharp bold ">Danh sách công việc</span>                 </div>             </div>             <div class="portlet-body">                 <div class="table-container">                     <div class="table-actions-wrapper">                         @if (canUpdate)                         {                             <button class="btn btn-sm blue table-group-action-PendingPublish"><i class="fa fa-check"></i> Hoàn thành</button>                         }                         <span></span>                     </div>                     <div class="table-actions-2-wrapper">                         Lọc theo trạng thái&nbsp;&nbsp;<select class=" form-control input-inline input-small input-sm object-filter">                             <option value="1">Chưa hoàn thành</option>                             <option value="2">Đã hoàn thành</option>                         </select>&nbsp;&nbsp;&nbsp;                     </div>                     <table class="table table-striped table-bordered table-hover" id="datatable_ajax_source">                         <thead>                             <tr role="row" class="heading">                                 <th class="table-checkbox">                                     <input type="checkbox" class="group-checkable" />                                 </th>                                 <th>                                     Hạn hoàn thành                                 </th>                                 <th>                                     Tên người liên hệ                                 </th>                                 <th>                                     Số điện thoại                                 </th>                                 @*<th>                                     Quận                                 </th>                                 <th>                                     Đường                                 </th>*@                                 <th>                                     Nội dung công việc                                 </th>                                 <th>                                     Trạng thái                                 </th>                                 <th>                                     Hành động                                 </th>                             </tr>                         </thead>                         <tbody></tbody>                     </table>                 </div>             </div>         </div>     </div> </div>   @section Styles{     @Styles.Render("~/Content/adminv1/select2", "~/Content/adminv1/datatable") } @section Scripts {     @Scripts.Render("~/bundles/adminv1/select2", "~/bundles/adminv1/datatable")     @Scripts.Render("~/bundles/adminv1/datatable-ajax-source") } @section Scripts2 {     <script type="text/javascript">         var Article = function () {             var handleArticle = function () {                 var grid = new DatatableAjaxSource();                 grid.init({                     src: $("#datatable_ajax_source"),                     onSuccess: function (grid) {                         // hành động khi tải xong dữ liệu                     },                     onError: function (grid) {                         // hành động khi tải dữ liệu bị lỗi                         var sel = $('select.object-filter').val();                     },                     dataTable: {                         "ajax": {                             "url": '@Url.RouteUrl("DanhSachCongViecGetDanhSachCongViecJson", new { status = 1 })',                         },                         "columnDefs": [{                             "targets": -1,                             "data": null,                             "render": function (data, type, full) {                                 var sel = $('select.object-filter').val();                                 switch (sel) {                                     //Lọc theo chờ duyệt                                     case '1':                                         var re = '';                                         if ('@canUpdate' == 'true' || '@canUpdate' == 'True') {                                             re = '<a class="btn btn-xs blue PendingPublish" data-objectid="' + data.Id + '" href="#"><i class="fa fa-check"></i> Hoàn thành</a>';                                         }                                         return re;                                         break;                                         //Lọc theo đã duyệt                                     case '2':                                         if ('@canUpdate' == 'true' || '@canUpdate' == 'True') {                                             re = '<a class="btn btn-xs red-flamingo RecentlyAdded" data-objectid="' + data.Id + '" href="#"><i class="fa fa-edit"></i> Thực hiện lại công việc</a>';                                             return re;                                         }                                         else {                                             return '';                                         }                                         break;                                     default:                                         return '';                                 }                             },                         }],                         "columns": [                             {                                 "searchable": false,                                 "orderable": false,                                 "data": "Id",                                 "render": function (data, type, full) {                                     return '<input type="checkbox" value="' + data + '" class="checkboxes">';                                 }                             },                             {                                 "searchable": true,                                 "orderable": true,                                 "data": null,                                 "render": function (data, type, full) {                                     var date = new Date(parseInt(data.NgayHoanThanh.substr(6)));                                     var formatted = ("0" + date.getDate()).slice(-2) + '-' +                                                     ("0" + (date.getMonth() + 1)).slice(-2) + '-' +                                                     date.getFullYear();                                     var ret = data.IsWarning ? '<span style="color: red;">' + formatted + '</span>' : '<span>' + formatted + '</span>';                                      return ret;                                 }                             },                             {                                 "searchable": true,                                 "orderable": true,                                 "data": null,                                 "render": function (data, type, full) {                                     return '<a href="' + ('@Url.RouteUrl("DanhSachCongViecDetailModal", new { id = "objectId" })').replace("objectId", data.Id) + '" data-target="#ajaxmodal" data-toggle="modal">' + data.TenNguoiLienHeVaiTro + '</a>'                                 }                             },                 { data: "SoDienThoai" },                 //{ data: "Quan" },                 //{ data: "Duong" },                 { data: "NoiDungCongViec" },                 { data: "TrangThai" },                 { data: null }                         ],                         "order": [                             [5, "desc"]                         ] // ép sắp xếp theo cột thứ 6 Trạng Thái                     }                 });                 grid.getTableWrapper().on('change', '.object-filter', function (e) {                     var sel = $(this).val();                     e.preventDefault();                     grid.setAjaxParam("objectStatus", $(this).val());                     grid.getDataTable().ajax.reload();                     grid.clearAjaxParams();                      switch (sel) {                         case '1':                             {                                 $('.table-group-action-PendingPublish').removeClass('display-hide');                                 //$('.table-group-action-RecentlyAdded').addClass('display-hide');                             }                             break;                         case '2':                             {                                 $('.table-group-action-PendingPublish').addClass('display-hide');                                 //$('.table-group-action-RecentlyAdded').removeClass('display-hide');                             }                             break;                     }                 });                  //Hoàn thành nhiều record                 grid.getTableWrapper().on('click', '.table-group-action-PendingPublish', function (e) {                     e.preventDefault();                     if (grid.getSelectedRowsCount() > 0) {                         SetArticleStatus(grid.getSelectedRows(), 2);                     } else if (grid.getSelectedRowsCount() === 0) {                         showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);                     }                 });                  //Hoàn thành                 grid.getTableWrapper().on('click', '.PendingPublish', function (e) {                     e.preventDefault();                     var ids = $(this).attr('data-objectid');                     SetArticleStatus(ids, 2); //2: Đã thực hiện                 });                  //Thực hiện lại công việc nhiều record                 grid.getTableWrapper().on('click', '.table-group-action-RecentlyAdded', function (e) {                     e.preventDefault();                     if (grid.getSelectedRowsCount() > 0) {                         SetArticleStatus(grid.getSelectedRows(), 1);                     } else if (grid.getSelectedRowsCount() === 0) {                         showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);                     }                 });                  //Thực hiện lại công việc                 grid.getTableWrapper().on('click', '.RecentlyAdded', function (e) {                     e.preventDefault();                     var ids = $(this).attr('data-objectid');                     SetArticleStatus(ids, 1); //1: Chưa thực hiện                 });                  //Hàm đổi trạng thái bài viết: 0: Chờ duyệt | 1: Đã duyệt                 var SetArticleStatus = function (ids, status) {                     AdminVersionOne.blockUI({                         message: 'Vui lòng đợi!',                         overlayColor: 'none',                         cenrerY: true,                         boxed: true                     });                     var $url = ('@Url.RouteUrl("DanhSachCongViecSetDanhSachCongViecStatus", new { ids = "objectIds", status = "objectStatus" })').replace("objectIds", ids).replace("objectStatus", status);                     $.ajax({                         type: 'POST',                         cache: false,                         async: true,                         url: $url,                         dataType: 'json',                         success: function (result) {                             if (result.success) {                                 showNoty(result.message, 'success', 'center', 5000);                             }                             else                                 showNoty(result.message, 'error', 'center', 5000);                         },                         error: function (jqXHR, textStatus, errorThrown) {                             showNoty(errorThrown, 'error', 'center', 5000);                         },                         complete: function (result) {                             grid.getDataTable().ajax.reload();                             AdminVersionOne.unblockUI();                         }                     });                     return;                 }             }             return {                 init: function () {                     handleArticle();                 }             };         }();         jQuery(document).ready(function () {             Article.init();          });     </script> }     