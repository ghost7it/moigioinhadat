@using Entities.Enums; @{
    ViewBag.Title = "Danh sách phân công công việc";
    Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";
    var canDelete = RoleHelper.CheckPermission(ModuleEnum.Nha, ActionEnum.Delete);
    var canCreate = RoleHelper.CheckPermission(ModuleEnum.Nha, ActionEnum.Create);
    var canUpdate = RoleHelper.CheckPermission(ModuleEnum.Nha, ActionEnum.Update);
    var canApprove = RoleHelper.CheckPermission(ModuleEnum.Nha, ActionEnum.Verify); } <div class="page-bar">     <ul class="page-breadcrumb">         <li>             <i class="fa fa-home"></i>             <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>             <i class="fa fa-angle-right"></i>         </li>         <li>             <a href="javascript:void(0);">Danh sách phân công công việc</a>         </li>     </ul> </div>  <div class="row">
    <div class="col-md-12">         <div class="portlet light">             <div class="portlet-title">                 <div class="caption">                     <i class="fa fa-check-square font-green-sharp bold"></i>                     <span class="caption-subject font-green-sharp bold ">Danh sách phân công công việc</span>                 </div>             </div>             <div class="portlet-body">                 <div class="table-container">                     <div class="table-actions-wrapper">                         @if (canApprove)
    {                             <button class="btn btn-sm blue table-group-action-PendingPublish"><i class="fa fa-check"></i> Duyệt</button>
    }                         @if (canDelete)
    {                             <button class="btn btn-sm red-flamingo table-group-action-Delete"><i class="fa fa-trash-o"></i> Xóa</button>
    }                         <span></span>                     </div>                     <div class="table-actions-2-wrapper">                         Lọc theo trạng thái&nbsp;&nbsp;<select class=" form-control input-inline input-small input-sm object-filter">                             <option value="0">Chờ duyệt</option>                             <option value="1">Đã duyệt</option>                             <option value="2">Đã hoàn thành</option>                         </select>&nbsp;&nbsp;&nbsp;                     </div>                     <table class="table table-striped table-bordered table-hover" id="datatable_ajax_source">                         <thead>                             <tr role="row" class="heading">                                 <th class="table-checkbox">                                     <input type="checkbox" class="group-checkable" />                                 </th>                                 <th>                                     Hạn hoàn thành                                 </th>                                 <th>                                     Nhân viên phụ trách                                 </th>                                 <th>                                     Tên khách                                 </th>                                 <th>                                     Tên chủ nhà                                 </th>                                 <th>                                     Tên tòa nhà                                 </th>                                 <th>                                     Trạng thái                                 </th>                                 <th>                                     Hành động                                 </th>                             </tr>                         </thead>                         <tbody></tbody>                     </table>                 </div>             </div>         </div>     </div> 
    <style type="text/css">
        .page-header, .page-bar {
            margin-top: -18px !important;
        }
    </style> 
</div>  @section Styles{     @Styles.Render("~/Content/adminv1/select2", "~/Content/adminv1/datatable") } @section Scripts {     @Scripts.Render("~/bundles/adminv1/select2", "~/bundles/adminv1/datatable")     @Scripts.Render("~/bundles/adminv1/datatable-ajax-source") } @section Scripts2 { 
    <script type="text/javascript">
         var Article = function () {
            var handleArticle = function () {
                var grid = new DatatableAjaxSource();                 grid.init({
                    src: $("#datatable_ajax_source"),                     onSuccess: function (grid) {                         // hành động khi tải xong dữ liệu                     },                     onError: function (grid) {                         // hành động khi tải dữ liệu bị lỗi                         var sel = $('select.object-filter').val();
                    },                     dataTable: {
                        "ajax": {
                            "url": '@Url.RouteUrl("GetPhanCongJson", new { status = 0 })',
                        },                         "columnDefs": [{
                            "targets": -1,                             "data": null,                             "render": function (data, type, full) {
                                var sel = $('select.object-filter').val();                                 switch (sel) {                                     //Lọc theo chờ duyệt                                     case '0':                                         var re = '';                                         if ('@canApprove' == 'true' || '@canApprove' == 'True') {
                                            re = '<a class="btn btn-xs blue PendingPublish" data-objectid="' + data.Id + '" href="#"><i class="fa fa-check"></i> Duyệt</a>';
                                        }                                         if ('@canUpdate' == 'true' || '@canUpdate' == 'True') {                                             //re = re + '<a href="' + ('@Url.RouteUrl("PhanCongCongViecUpdate", new { id = "objectId" })                                             re = re + '<a class="btn btn-xs green  RecentlyAdded" data-objectid="' + data.Id + '" href="' + ('@Url.RouteUrl("PhanCongCongViecUpdate", new { id = "objectId" })').replace("objectId", data.Id) + '"><i class="fa fa-edit"></i> Sửa</a>';
                                        }                                         if ('@canDelete' == 'true' || '@canDelete' == 'True') {
                                            re = re + '<a class="btn default btn-xs red-flamingo Delete" data-objectid="' + data.Id + '" href="#"><i class="fa fa-trash-o"></i> Xóa</a>';
                                        }                                         return re;                                         break;                                         //Lọc theo đã duyệt                                     case '1':                                         if ('@canUpdate' == 'true' || '@canUpdate' == 'True') {
                                            re = '<a class="btn btn-xs green  RecentlyAdded" data-objectid="' + data.Id + '" href="' + ('@Url.RouteUrl("PhanCongCongViecUpdate", new { id = "objectId" })').replace("objectId", data.Id) + '"><i class="fa fa-edit"></i> Sửa</a>';                                             re = re + '<a class="btn default btn-xs red-flamingo Delete" data-objectid="' + data.Id + '" href="#"><i class="fa fa-trash-o"></i> Xóa</a>';                                             return re;
                                        }                                         else {
                                            return '';
                                        }                                         break;                                     default:                                         return '';
                                }
                            },
                        }],                         "columns": [                             {
                                "searchable": false,                                 "orderable": false,                                 "data": "Id",                                 "render": function (data, type, full) {
                                    return '<input type="checkbox" value="' + data + '" class="checkboxes">';
                                }
                            },                             {
                                "searchable": true,                                 "orderable": true,                                 "data": null,                                 "render": function (data, type, full) {
                                    var date = new Date(parseInt(data.NgayHoanThanh.substr(6)));                                     var formatted = ("0" + date.getDate()).slice(-2) + '-' +                                                     ("0" + (date.getMonth() + 1)).slice(-2) + '-' +                                                     date.getFullYear();                                     var ret = data.IsWarning ? '<span style="color: red;">' + formatted + '</span>' : '<span>' + formatted + '</span>';                                      return ret;
                                }
                            },                             {
                                "searchable": true,                                 "orderable": true,                                 "data": null,                                 "render": function (data, type, full) {
                                    return '<a href="' + ('@Url.RouteUrl("PhanCongCongViecDetailModal", new { id = "objectId" })').replace("objectId", data.Id) + '" data-target="#ajaxmodal" data-toggle="modal">' + data.TenNhanVienPhuTrach + '</a>'
                                }
                            },                     { data: "TenKhach" },                     { data: "ChuNha" },                     { data: "TenToaNha" },                     { data: "TrangThai" },                     { data: null }                         ],                         "order": [                             [6, "desc"]                         ]
                    }
                });                 grid.getTableWrapper().on('change', '.object-filter', function (e) {
                    var sel = $(this).val();                     e.preventDefault();                     grid.setAjaxParam("objectStatus", $(this).val());                     grid.getDataTable().ajax.reload();                     grid.clearAjaxParams();                     switch (sel) {
                        case '0':                             {
                                $('.table-group-action-PendingPublish').removeClass('display-hide');                                 $('.table-group-action-RecentlyAdded').addClass('display-hide');                                 $('.table-group-action-Delete').removeClass('display-hide');
                            }                             break;                         case '1':                             {
                                $('.table-group-action-PendingPublish').addClass('display-hide');                                 $('.table-group-action-RecentlyAdded').removeClass('display-hide');                                 $('.table-group-action-Delete').addClass('display-hide');
                            }                             break;
                    }
                });                  //Duyệt nhiều record                 grid.getTableWrapper().on('click', '.table-group-action-PendingPublish', function (e) {
                    e.preventDefault();                     if (grid.getSelectedRowsCount() > 0) {
                        SetArticleStatus(grid.getSelectedRows(), 1);
                    } else if (grid.getSelectedRowsCount() === 0) {
                        showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                    }
                });                  //Xóa nhiều bài viết                 grid.getTableWrapper().on('click', '.table-group-action-Delete', function (e) {
                    e.preventDefault();                     if (grid.getSelectedRowsCount() > 0) {
                        if (confirm('Bạn có chắc chắn muốn xóa không?')) {
                            DeleteArticle(grid.getSelectedRows());
                        }
                    } else if (grid.getSelectedRowsCount() === 0) {
                        showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                    }
                });                  //Duyệt                 grid.getTableWrapper().on('click', '.PendingPublish', function (e) {
                    e.preventDefault();                     var ids = $(this).attr('data-objectid');                     SetArticleStatus(ids, 1);
                });                  //Xóa 1 bài viết                 grid.getTableWrapper().on('click', '.Delete', function (e) {
                    e.preventDefault();                     if (confirm('Bạn có chắc chắn muốn xóa không?')) {
                        var ids = $(this).attr('data-objectid');                         DeleteArticle(ids);
                    }
                });                  //Hàm đổi trạng thái bài viết: 0: Chờ duyệt | 1: Đã duyệt                 var SetArticleStatus = function (ids, status) {
                    AdminVersionOne.blockUI({
                        message: 'Vui lòng đợi!',                         overlayColor: 'none',                         cenrerY: true,                         boxed: true
                    });                     var $url = ('@Url.RouteUrl("PhanCongCongViecSetPhanCongCongViecStatus", new { ids = "objectIds", status = "objectStatus" })').replace("objectIds", ids).replace("objectStatus", status);                     $.ajax({
                        type: 'POST',                         cache: false,                         async: true,                         url: $url,                         dataType: 'json',                         success: function (result) {
                            if (result.success) {
                                showNoty(result.message, 'success', 'center', 5000);
                            }                             else                                 showNoty(result.message, 'error', 'center', 5000);
                        },                         error: function (jqXHR, textStatus, errorThrown) {
                            showNoty(errorThrown, 'error', 'center', 5000);
                        },                         complete: function (result) {
                            grid.getDataTable().ajax.reload();                             AdminVersionOne.unblockUI();
                        }
                    });                     return;
                }                  //Hàm xóa bài viết                 var DeleteArticle = function (ids) {
                    AdminVersionOne.blockUI({
                        message: 'Vui lòng đợi!',                         overlayColor: 'none',                         cenrerY: true,                         boxed: true
                    });                     var $url = ('@Url.RouteUrl("PhanCongCongViecDeletePhanCongCongViecs", new { ids = "objectIds" })').replace("objectIds", ids);                     $.ajax({
                        type: 'POST',                         cache: false,                         async: true,                         url: $url,                         dataType: 'json',                         success: function (result) {
                            if (result.success) {
                                showNoty(result.message, 'success', 'center', 5000);
                            }                             else                                 showNoty(result.message, 'error', 'center', 5000);
                        },                         error: function (jqXHR, textStatus, errorThrown) {
                            showNoty(errorThrown, 'error', 'center', 5000);
                        },                         complete: function (result) {
                            grid.getDataTable().ajax.reload();                             AdminVersionOne.unblockUI();
                        }
                    });                     return;
                }
            }             return {
                init: function () {
                    handleArticle();
                }
            };
        }();         jQuery(document).ready(function () {
            Article.init();
         }); </script> }